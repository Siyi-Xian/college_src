#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.6 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 32 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 89 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 116 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 142 28 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 25 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 45 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 47 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1           0 1158 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 194
(
 #"#reader(lib \"htdp-beginner-reader.ss\" \"lang\")((modname |Assignme"
 #"nt-4-Siyi Xian|) (read-case-sensitive #t) (teachpacks ()) (htdp-sett"
 #"ings #(#t constructor repeating-decimal #f #t none #f () #f)))"
) 0 0 4 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 12 #"; Exercise 1"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 52 #"; tank is a structure that contains location of tank"
0 0 25 29 1 #"\n"
0 0 17 3 37 #"; x dx: PositiveNumber PositiveNumber"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 4 #"tank"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 2 #"dx"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 59
#"; fired is a structure that contains ufo, tank, and missile"
0 0 25 29 1 #"\n"
0 0 17 3 38 #"; ufo, tank, missile: posn, tank, posn"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 5 #"fired"
0 0 25 3 2 #" ("
0 0 14 3 3 #"ufo"
0 0 25 3 1 #" "
0 0 14 3 4 #"tank"
0 0 25 3 1 #" "
0 0 14 3 7 #"missile"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 52 #"; Define a function that output is the image of tank"
0 0 25 29 1 #"\n"
0 0 17 3 10 #"; -> image"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"tank-image"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"overlay"
0 0 25 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 9 #"rectangle"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 51 #"; Define a function that output is the image of ufo"
0 0 25 29 1 #"\n"
0 0 17 3 10 #"; -> image"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"ufo-image"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 9 #"rectangle"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 55 #"; Define a function that output is the image of missile"
0 0 25 29 1 #"\n"
0 0 17 3 10 #"; -> image"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 13 #"missile-image"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 8 #"triangle"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 51 #"; canvas is the function that define the background"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"canvas"
0 0 25 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 25 3 1 #" "
0 0 22 3 3 #"200"
0 0 25 3 1 #" "
0 0 22 3 3 #"200"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 69
(
 #"; Define a function to draw tank at the given position and backgroun"
 #"d"
) 0 0 25 29 1 #"\n"
0 0 17 3 22 #"; Tank Image -> Image "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"tank-render"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 1 #" "
0 0 14 3 2 #"im"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 25 3 1 #" "
0 0 14 3 10 #"tank-image"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 6 #"tank-x"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 22 3 3 #"200"
0 0 25 3 2 #" ("
0 0 14 3 7 #"tank-dx"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 14 3 2 #"im"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 68
#"; Define a function to draw ufo at the given position and background"
0 0 25 29 1 #"\n"
0 0 17 3 21 #"; UFO Image -> Image "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"ufo-render"
0 0 25 3 1 #" "
0 0 14 3 1 #"u"
0 0 25 3 1 #" "
0 0 14 3 2 #"im"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 25 3 1 #" "
0 0 14 3 9 #"ufo-image"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 6 #"posn-x"
0 0 25 3 1 #" "
0 0 14 3 1 #"u"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 22 3 3 #"200"
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 25 3 1 #" "
0 0 14 3 1 #"u"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 14 3 2 #"im"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 72
(
 #"; Define a function to draw missile at the given position and backgr"
 #"ound"
) 0 0 25 29 1 #"\n"
0 0 17 3 25 #"; Missile Image -> Image "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 14 #"missile-render"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 1 #" "
0 0 14 3 2 #"im"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 25 3 1 #" "
0 0 14 3 13 #"missile-image"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 6 #"posn-x"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 22 3 3 #"200"
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 25 3 1 #" "
0 0 14 3 1 #"m"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 14 3 2 #"im"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 25 #"; s is structure of fired"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-fired"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 3 #"145"
0 0 25 3 1 #" "
0 0 22 3 3 #"165"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 9 #"make-tank"
0 0 25 3 1 #" "
0 0 22 3 2 #"95"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 2 #"95"
0 0 25 3 1 #" "
0 0 22 3 3 #"160"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 63
#"; t1 the the function that do tank-render first then ufo-render"
0 0 25 29 1 #"\n"
0 0 17 3 16 #"; fired -> image"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 2 #"t1"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 11 #"tank-render"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 10 #"fired-tank"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 10 #"ufo-render"
0 0 25 3 2 #" ("
0 0 14 3 9 #"fired-ufo"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 14 #"missile-render"
0 0 25 3 2 #" ("
0 0 14 3 13 #"fired-missile"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 50 #"                                                  "
0 0 14 3 6 #"canvas"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 17 3 63
#"; t2 the the function that do ufo-render first then tank-render"
0 0 25 29 1 #"\n"
0 0 17 3 16 #"; fired -> image"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 2 #"t2"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 10 #"ufo-render"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 9 #"fired-ufo"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 11 #"tank-render"
0 0 25 3 2 #" ("
0 0 14 3 10 #"fired-tank"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 14 #"missile-render"
0 0 25 3 2 #" ("
0 0 14 3 13 #"fired-missile"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 51 #"                                                   "
0 0 14 3 6 #"canvas"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 2 #"t1"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 2 #"t2"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 12 #"; Exercise 2"
0 0 25 29 1 #"\n"
0 0 17 3 30 #"; Number number number -> date"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 4 #"date"
0 0 25 3 2 #" ("
0 0 14 3 4 #"year"
0 0 25 3 1 #" "
0 0 14 3 5 #"month"
0 0 25 3 1 #" "
0 0 14 3 3 #"day"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"my-birthday"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 9 #"make-date"
0 0 25 3 1 #" "
0 0 22 3 4 #"1998"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 2 #"17"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 15 #"when-come-to-us"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 9 #"make-date"
0 0 25 3 1 #" "
0 0 22 3 4 #"2016"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 20 #"first-day-of-college"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 9 #"make-date"
0 0 25 3 1 #" "
0 0 22 3 4 #"2016"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 22 3 2 #"22"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 12 #"her-birthday"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 9 #"make-date"
0 0 25 3 1 #" "
0 0 22 3 4 #"1998"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 2 #"27"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 19 #"first-day-to-school"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 9 #"make-date"
0 0 25 3 1 #" "
0 0 22 3 4 #"2004"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 12 #"; Exercise 3"
0 0 25 29 1 #"\n"
0 0 17 3 84
(
 #"; Define a struct that contains a house number, a street name, and c"
 #"ity, and a state"
) 0 0 25 29 1 #"\n"
0 0 17 3 40 #"; String string string string -> address"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 7 #"address"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 12 #"house-number"
0 0 25 3 1 #" "
0 0 14 3 11 #"street-name"
0 0 25 3 1 #" "
0 0 14 3 4 #"city"
0 0 25 3 1 #" "
0 0 14 3 5 #"state"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 12 #"; Exercise 4"
0 0 25 29 1 #"\n"
0 0 17 3 41 #"; Define a template that putin an address"
0 0 25 29 1 #"\n"
0 0 17 3 16 #"; address -> \357\274\237"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"use-address"
0 0 25 3 1 #" "
0 0 14 3 3 #"add"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 14 3 3 #"..."
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 20 #"address-house-number"
0 0 25 3 1 #" "
0 0 14 3 3 #"add"
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 14 3 3 #"..."
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 19 #"address-street-name"
0 0 25 3 1 #" "
0 0 14 3 3 #"add"
0 0 25 3 1 #")"
0 0 14 3 3 #"..."
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 14 3 3 #"..."
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 12 #"address-city"
0 0 25 3 1 #")"
0 0 14 3 3 #"..."
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 14 3 3 #"..."
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 13 #"address-state"
0 0 25 3 1 #")"
0 0 14 3 3 #"..."
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 12 #"; Exercise 5"
0 0 25 29 1 #"\n"
0 0 17 3 86
(
 #"; even-side is a function that determines whether the house is on th"
 #"e even side or not"
) 0 0 25 29 1 #"\n"
0 0 17 3 20 #"; address -> blooean"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"even-side"
0 0 25 3 1 #" "
0 0 14 3 3 #"add"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 5 #"even?"
0 0 25 3 2 #" ("
0 0 14 3 20 #"address-house-number"
0 0 25 3 1 #" "
0 0 14 3 3 #"add"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"even-side"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-address"
0 0 25 3 1 #" "
0 0 22 3 4 #"3102"
0 0 25 3 1 #" "
0 0 19 3 11 #"\"Rose Ave.\""
0 0 25 3 1 #" "
0 0 19 3 13 #"\"Bloomington\""
0 0 25 3 1 #" "
0 0 19 3 4 #"\"IN\""
0 0 25 3 3 #")) "
0 0 22 3 5 #"#true"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"even-side"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-address"
0 0 25 3 1 #" "
0 0 22 3 4 #"1257"
0 0 25 3 1 #" "
0 0 19 3 13 #"\"Central St.\""
0 0 25 3 1 #" "
0 0 19 3 15 #"\"New York City\""
0 0 25 3 1 #" "
0 0 19 3 4 #"\"NY\""
0 0 25 3 3 #")) "
0 0 22 3 6 #"#false"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 12 #"; Exercise 6"
0 0 25 29 1 #"\n"
0 0 17 3 74
(
 #"; small-one is a function that give the output of the smaller house "
 #"number"
) 0 0 25 29 1 #"\n"
0 0 17 3 28 #"; address address -> address"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"small-one"
0 0 25 3 1 #" "
0 0 14 3 3 #"ad1"
0 0 25 3 1 #" "
0 0 14 3 3 #"ad2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"   (("
0 0 14 3 1 #"<"
0 0 25 3 2 #" ("
0 0 14 3 20 #"address-house-number"
0 0 25 3 1 #" "
0 0 14 3 3 #"ad1"
0 0 25 3 3 #") ("
0 0 14 3 20 #"address-house-number"
0 0 25 3 1 #" "
0 0 14 3 3 #"ad2"
0 0 25 3 3 #")) "
0 0 14 3 3 #"ad1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"   (("
0 0 14 3 1 #">"
0 0 25 3 2 #" ("
0 0 14 3 20 #"address-house-number"
0 0 25 3 1 #" "
0 0 14 3 3 #"ad1"
0 0 25 3 3 #") ("
0 0 14 3 20 #"address-house-number"
0 0 25 3 1 #" "
0 0 14 3 3 #"ad2"
0 0 25 3 3 #")) "
0 0 14 3 3 #"ad2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 19 3 71
(
 #"\"The street number of the first address is equal to that of the sec"
 #"ond\""
) 0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 29 1 #"\n"
0 0 25 3 2 #" ("
0 0 14 3 9 #"small-one"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-address"
0 0 25 3 1 #" "
0 0 22 3 5 #"10047"
0 0 25 3 1 #" "
0 0 19 3 13 #"\"Forest Ave.\""
0 0 25 3 1 #" "
0 0 19 3 11 #"\"Champagne\""
0 0 25 3 1 #" "
0 0 19 3 4 #"\"IL\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 12 #"make-address"
0 0 25 3 1 #" "
0 0 22 3 4 #"2048"
0 0 25 3 1 #" "
0 0 19 3 11 #"\"Rose Ave.\""
0 0 25 3 1 #" "
0 0 19 3 13 #"\"Bloomington\""
0 0 25 3 1 #" "
0 0 19 3 4 #"\"IN\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-address"
0 0 25 3 1 #" "
0 0 22 3 4 #"2048"
0 0 25 3 1 #" "
0 0 19 3 11 #"\"Rose Ave.\""
0 0 25 3 1 #" "
0 0 19 3 13 #"\"Bloomington\""
0 0 25 3 1 #" "
0 0 19 3 4 #"\"IN\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 29 1 #"\n"
0 0 25 3 2 #" ("
0 0 14 3 9 #"small-one"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-address"
0 0 25 3 1 #" "
0 0 22 3 2 #"31"
0 0 25 3 1 #" "
0 0 19 3 13 #"\"Jordan Ave.\""
0 0 25 3 1 #" "
0 0 19 3 13 #"\"Bloomington\""
0 0 25 3 1 #" "
0 0 19 3 4 #"\"IN\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 12 #"make-address"
0 0 25 3 1 #" "
0 0 22 3 3 #"227"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"1st St.\""
0 0 25 3 1 #" "
0 0 19 3 14 #"\"Indianapolis\""
0 0 25 3 1 #" "
0 0 19 3 4 #"\"IN\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-address"
0 0 25 3 1 #" "
0 0 22 3 2 #"31"
0 0 25 3 1 #" "
0 0 19 3 13 #"\"Jordan Ave.\""
0 0 25 3 1 #" "
0 0 19 3 13 #"\"Bloomington\""
0 0 25 3 1 #" "
0 0 19 3 4 #"\"IN\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 29 1 #"\n"
0 0 25 3 2 #" ("
0 0 14 3 9 #"small-one"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-address"
0 0 25 3 1 #" "
0 0 22 3 3 #"455"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"5th St.\""
0 0 25 3 1 #" "
0 0 19 3 11 #"\"San Diago\""
0 0 25 3 1 #" "
0 0 19 3 4 #"\"CA\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 12 #"make-address"
0 0 25 3 1 #" "
0 0 22 3 3 #"455"
0 0 25 3 1 #" "
0 0 19 3 14 #"\"College Ave.\""
0 0 25 3 1 #" "
0 0 19 3 13 #"\"Bloomington\""
0 0 25 3 1 #" "
0 0 19 3 4 #"\"IN\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 19 3 71
(
 #"\"The street number of the first address is equal to that of the sec"
 #"ond\""
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 12 #"; Exercise 7"
0 0 25 29 1 #"\n"
0 0 17 3 70
(
 #"; mailing-address is a function that output is a format of the addre"
 #"ss"
) 0 0 25 29 1 #"\n"
0 0 17 3 19 #"; address -> string"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 15 #"mailing-address"
0 0 25 3 1 #" "
0 0 14 3 3 #"add"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 13 #"string-append"
0 0 25 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 25 3 2 #" ("
0 0 14 3 20 #"address-house-number"
0 0 25 3 1 #" "
0 0 14 3 3 #"add"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                  "
0 0 19 3 3 #"\" \""
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ("
0 0 14 3 19 #"address-street-name"
0 0 25 3 1 #" "
0 0 14 3 3 #"add"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                  "
0 0 19 3 4 #"\", \""
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ("
0 0 14 3 12 #"address-city"
0 0 25 3 1 #" "
0 0 14 3 3 #"add"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                  "
0 0 19 3 4 #"\", \""
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ("
0 0 14 3 13 #"address-state"
0 0 25 3 1 #" "
0 0 14 3 3 #"add"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 15 #"mailing-address"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-address"
0 0 25 3 1 #" "
0 0 22 3 3 #"150"
0 0 25 3 1 #" "
0 0 19 3 11 #"\"Rose Ave.\""
0 0 25 3 1 #" "
0 0 19 3 13 #"\"Bloomington\""
0 0 25 3 1 #" "
0 0 19 3 4 #"\"IN\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 19 3 32 #"\"150 Rose Ave., Bloomington, IN\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 20 #"; Exercise Quadrants"
0 0 25 29 1 #"\n"
0 0 17 3 43 #"; quadrants is function that gives an image"
0 0 25 29 1 #"\n"
0 0 17 3 53 #"; PositiveNumber string string string string -> image"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"quadrants"
0 0 25 3 1 #" "
0 0 14 3 4 #"wide"
0 0 25 3 1 #" "
0 0 14 3 6 #"color1"
0 0 25 3 1 #" "
0 0 14 3 6 #"color2"
0 0 25 3 1 #" "
0 0 14 3 6 #"color3"
0 0 25 3 1 #" "
0 0 14 3 6 #"color4"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 5 #"above"
0 0 25 3 2 #" ("
0 0 14 3 6 #"beside"
0 0 25 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 4 #"wide"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 14 3 6 #"color1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ("
0 0 14 3 6 #"square"
0 0 25 3 1 #" "
0 0 14 3 4 #"wide"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 14 3 6 #"color2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 6 #"beside"
0 0 25 3 2 #" ("
0 0 14 3 7 #"ellipse"
0 0 25 3 1 #" "
0 0 14 3 4 #"wide"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 4 #"wide"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 14 3 6 #"color3"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ("
0 0 14 3 8 #"triangle"
0 0 25 3 1 #" "
0 0 14 3 4 #"wide"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 14 3 6 #"color4"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"quadrants"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 5 #"above"
0 0 25 3 2 #" ("
0 0 14 3 6 #"beside"
0 0 25 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 6 #"square"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 6 #"beside"
0 0 25 3 2 #" ("
0 0 14 3 7 #"ellipse"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 8 #"triangle"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 12 #"; Exercise 8"
0 0 25 29 1 #"\n"
0 0 17 3 40 #"; draw is a function that darw some word"
0 0 25 29 1 #"\n"
0 0 17 3 16 #"; string -> word"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"draw"
0 0 25 3 1 #" "
0 0 14 3 4 #"word"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 25 3 2 #" ("
0 0 14 3 4 #"text"
0 0 25 3 1 #" "
0 0 14 3 4 #"word"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 3 #"300"
0 0 25 3 1 #" "
0 0 22 3 2 #"25"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 11 #"empty-scene"
0 0 25 3 1 #" "
0 0 22 3 3 #"600"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 4 #"draw"
0 0 25 3 1 #" "
0 0 19 3 14 #"\"HOLLE WORLD!\""
0 0 25 3 2 #") "
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 11 #"place-image"
0 0 25 3 1 #" "
0 6           4 4 1895
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:translate 14.5 20.0 #(stru"
 #"ct:text \"H\" 0 1 \"blue\" 40 #f swiss normal normal #f))) #(struct:"
 #"translate 29.0 0.0 #(struct:translate 15.5 20.0 #(struct:text \"O\" "
 #"0 1 \"blue\" 40 #f swiss normal normal #f))))) #(struct:translate 60"
 #".0 0.0 #(struct:translate 11.0 20.0 #(struct:text \"L\" 0 1 \"blue\""
 #" 40 #f swiss normal normal #f))))) #(struct:translate 82.0 0.0 #(str"
 #"uct:translate 11.0 20.0 #(struct:text \"L\" 0 1 \"blue\" 40 #f swiss"
 #" normal normal #f))))) #(struct:translate 104.0 0.0 #(struct:transla"
 #"te 13.5 20.0 #(struct:text \"E\" 0 1 \"blue\" 40 #f swiss normal nor"
 #"mal #f))))) #(struct:translate 131.0 0.0 #(struct:translate 5.5 20.0"
 #" #(struct:text \" \" 0 1 \"blue\" 40 #f swiss normal normal #f))))) "
 #"#(struct:translate 142.0 0.0 #(struct:translate 19.0 20.0 #(struct:t"
 #"ext \"W\" 0 1 \"blue\" 40 #f swiss normal normal #f))))) #(struct:tr"
 #"anslate 180.0 0.0 #(struct:translate 15.5 20.0 #(struct:text \"O\" 0"
 #" 1 \"blue\" 40 #f swiss normal normal #f))))) #(struct:translate 211"
 #".0 0.0 #(struct:translate 14.5 20.0 #(struct:text \"R\" 0 1 \"blue\""
 #" 40 #f swiss normal normal #f))))) #(struct:translate 240.0 0.0 #(st"
 #"ruct:translate 11.0 20.0 #(struct:text \"L\" 0 1 \"blue\" 40 #f swis"
 #"s normal normal #f))))) #(struct:translate 262.0 0.0 #(struct:transl"
 #"ate 14.5 20.0 #(struct:text \"D\" 0 1 \"blue\" 40 #f swiss normal no"
 #"rmal #f))))) #(struct:translate 291.0 0.0 #(struct:translate 5.5 20."
 #"0 #(struct:text \"!\" 0 1 \"blue\" 40 #f swiss normal normal #f)))) "
 #"#(struct:bb 302.0 40.0 30.80078125) #f)"
) 0 0 25 29 1 #"\n"
0 0 25 3 27 #"                           "
0 0 22 3 3 #"300"
0 0 25 3 1 #" "
0 0 22 3 2 #"25"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 11 #"empty-scene"
0 0 25 3 1 #" "
0 0 22 3 3 #"600"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 17 #"; Exercise 9 & 10"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 35 #"; type is a function that do on-key"
0 0 25 29 1 #"\n"
0 0 17 3 22 #"; string key -> string"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"type"
0 0 25 3 1 #" "
0 0 14 3 4 #"word"
0 0 25 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 5 #"key=?"
0 0 25 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 25 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 5 #"reset"
0 0 25 3 1 #" "
0 0 14 3 4 #"word"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 13 #"string-append"
0 0 25 3 1 #" "
0 0 14 3 4 #"word"
0 0 25 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 58
#"; reset function is going to reset the scene when type \" \""
0 0 25 29 1 #"\n"
0 0 17 3 23 #"; string -> empty scene"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"reset"
0 0 25 3 1 #" "
0 0 14 3 4 #"word"
0 0 25 3 2 #") "
0 0 19 3 2 #"\"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 35 #"; show the word that has been typed"
0 0 25 29 1 #"\n"
0 0 17 3 13 #"; key -> word"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 8 #"big-bang"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 25 29 1 #"\n"
0 0 25 3 2 #" ("
0 0 14 3 7 #"to-draw"
0 0 25 3 1 #" "
0 0 14 3 4 #"draw"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #" ("
0 0 14 3 6 #"on-key"
0 0 25 3 1 #" "
0 0 14 3 4 #"type"
0 0 25 3 2 #"))"
0           0
